% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group_by.R
\name{group_by.GInteractions}
\alias{group_by.GInteractions}
\alias{ungroup.GInteractions}
\title{Group GInteractions by columns}
\usage{
\method{group_by}{GInteractions}(.data, ...)

\method{ungroup}{GInteractions}(x, ...)
}
\arguments{
\item{.data, x}{a GInteractions object}

\item{...}{Column(s) to group by.}
}
\value{
a GInteractions object.
}
\description{
Group GInteractions by columns
}
\examples{
gi <- read.table(text = "
chr1 11 20 chr1 21 30
chr1 11 20 chr1 51 50
chr1 11 30 chr1 51 50
chr1 11 30 chr2 51 60",
col.names = c("seqnames1", "start1", "end1", "seqnames2", "start2", "end2")) |> 
  as_ginteractions() |> 
  mutate(type = c('cis', 'cis', 'cis', 'trans'), score = runif(4))

####################################################################
# 1. Group by code column
####################################################################

gi |> group_by(end1)

gi |> group_by(end1, end2) |> group_data()

####################################################################
# 2. Group by metadata column
####################################################################

gi |> group_by(type) |> group_data()

####################################################################
# 3. Combine core and metadata column grouping
####################################################################

gi |> group_by(end1, type)
gi |> group_by(end1, type) |> group_data()

####################################################################
# 4. Create a new column and group by this new variable
####################################################################

gi |> group_by(class = c(1, 2, 1, 2))

####################################################################
# 5. Ungroup column(s)
####################################################################

ggi <- gi |> group_by(type, class = c(1, 2, 1, 2))
ggi
ungroup(ggi, type)
ungroup(ggi, class)

}
